
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
import pandas as pd
from tkinter import ttk, Tk, Canvas, Entry, Text, Button, PhotoImage, Frame
from backend.automationprocess import automation_process
from backend.table_methods import get_ttk_table


BASE_PATH = Path(__file__).resolve().parent.parent

# Define the relative path to the assets directory
ASSETS_REL_PATH = Path("assets/frame2")

# Define the absolute path to the assets directory
ASSETS_PATH = BASE_PATH / ASSETS_REL_PATH


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
window = Tk()

window.geometry("700x550")
window.configure(bg = "#FFFFFF")

excelPath = "Automation Data\Prototype_v2.2.xlsx"
sheetNo = 0
excel_file = pd.ExcelFile(excelPath)
num_of_sheets = len(excel_file.sheet_names)
currentSheet = pd.read_excel(excelPath, sheet_name=sheetNo)
excelHeaders = tuple(currentSheet.columns.values)

def changeSheet(adj):
    global sheetNo 
    global currentSheet
    global excelHeaders
    if sheetNo + adj >= 0 and sheetNo + adj < num_of_sheets:
        sheetNo += adj
        currentSheet = pd.read_excel(excelPath, sheet_name=sheetNo)
        excelHeaders = tuple(currentSheet.columns.values)
        canvas.itemconfig(label, text=f'{excel_file.sheet_names[sheetNo]:^40}')
        loadSheet()

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 550,
    width = 700,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

def loadSheet():
    # Create a Frame to hold the Treeview and Scrollbar
    frame = Frame(canvas)
    frame.place(x=255, y=350, width=400, height=155)

    # Create a TreeView widget
    treeview = ttk.Treeview(frame)

    # Define some columns
    treeview["columns"] = excelHeaders
    treeview.column("#0", minwidth=0, width=0)

    for header in excelHeaders:
        treeview.heading(header, text=header)
        treeview.column(header, minwidth=0, width=int(400/len(excelHeaders)))

    for values in currentSheet.values:
        treeview.insert("", "end", values=tuple(values))

    # Create a vertical scrollbar
    vertscrollbar = ttk.Scrollbar(frame, orient="vertical", command=treeview.yview)
    vertscrollbar.pack(side="right", fill="y")

    # Create a horizontal scrollbar
    horscrollbar = ttk.Scrollbar(frame, orient="horizontal", command=treeview.xview)
    horscrollbar.pack(side="top", fill="x")

    # Pack the TreeView widget with the scrollbar
    treeview.pack(side="left", fill="y", expand=True)

    # Configure the TreeView to use the scrollbar
    treeview.configure(yscrollcommand=vertscrollbar.set)
    treeview.configure(xscrollcommand=horscrollbar.set)

loadSheet()

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    700.0,
    62.0,
    fill="#00116B",
    outline="")

canvas.create_text(
    15.0,
    14.0,
    anchor="nw",
    text="Entry Automation",
    fill="#FFFFFF",
    font=("Inter Bold", 28 * -1)
)

canvas.create_rectangle(
    0.0,
    252.0,
    700.0,
    550.0,
    fill="#2A2A2A",
    outline="")

canvas.create_rectangle(
    244.0,
    292.0,
    670.0,
    523.0,
    fill="#363636",
    outline="")

canvas.create_rectangle(
    31.0,
    292.0,
    220.0,
    523.0,
    fill="#363636",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    350.0,
    157.0,
    image=image_image_1
)

canvas.create_rectangle(
    190.0,
    113.0,
    510.0,
    213.0,
    fill="#D9D9D9",
    outline="")

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
automate_btn = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: automation_process(),
    relief="flat"
)
automate_btn.place(
    x=213.0,
    y=133.0,
    width=195.0,
    height=64.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=425.0,
    y=133.0,
    width=64.0,
    height=64.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(
    x=62.0,
    y=449.0,
    width=128.0,
    height=32.0
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    125.0,
    374.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    457.0,
    313.0,
    image=image_image_3
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
prev_sheet_btn = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: changeSheet(-1),
    relief="flat"
)
prev_sheet_btn.place(
    x=362.0,
    y=303.0,
    width=20.0,
    height=20.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
next_sheet_btn = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: changeSheet(1),
    relief="flat"
)
next_sheet_btn.place(
    x=532.0,
    y=303.0,
    width=20.0,
    height=20.0
)

label = canvas.create_text(
    382.0,
    306.0,
    anchor="nw",
    text='',
    fill="#FFFFFF",
    font=("Inter Bold", 12 * -1)
)


# excelDisplay = canvas.create_text(
#     350.0,
#     412.0,
#     anchor="nw",
#     text=currentSheet,
#     fill="#FFFFFF",
#     font=("Inter Bold", 12 * -1)
# )



# image_image_4 = PhotoImage(
#     file=relative_to_assets("image_4.png"))
# image_4 = canvas.create_image(
#     460.0,
#     412.0,
#     image=image_image_4
# )

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
delete_excel_btn = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_6 clicked"),
    relief="flat"
)
# delete_excel_btn.place(
#     x=258.0,
#     y=467.0,
#     width=80.0,
#     height=38.0
# )

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
verify_btn = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_8 clicked"),
    relief="flat"
)
# verify_btn.place(
#     x=345.0,
#     y=467.0,
#     width=80.0,
#     height=38.0
# )

button_image_9 = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_9 clicked"),
    relief="flat"
)
# button_9.place(
#     x=345.0,
#     y=422.0,
#     width=80.0,
#     height=38.0
# )
window.resizable(False, False)
window.mainloop()
